import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'application'
}

group 'captainsly'
version '0.1.0'
mainClassName = 'captainsly.Main'

ext {
	lwjglVersion = "3.3.0"
	imguiVersion = "1.86.2"
	jomlVersion = "1.10.4"
	
	reload4jVersion = "1.2.19"
	slf4jVersion = "2.0.0-alpha6"
}

switch (OperatingSystem.current()) {
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
		break
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
}

repositories {
    mavenCentral()
}

dependencies {
	
	/* Logging - SLF4J & Reload4J */
	implementation "org.slf4j:slf4j-api:${slf4jVersion}"
	implementation "ch.qos.reload4j:reload4j:${reload4jVersion}"
	implementation "org.slf4j:slf4j-reload4j:${slf4jVersion}"

	/* Dear ImGui */
    implementation "io.github.spair:imgui-java-binding:$imguiVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"
    
    implementation "io.github.spair:imgui-java-$lwjglNatives:$imguiVersion"
	

	/* LWJGL */
	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-assimp"
	implementation "org.lwjgl:lwjgl-bgfx"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-nanovg"
	implementation "org.lwjgl:lwjgl-nuklear"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-par"
	implementation "org.lwjgl:lwjgl-stb"
	implementation "org.lwjgl:lwjgl-vulkan"
	runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
	implementation "org.joml:joml:${jomlVersion}"
}

task fatJar(type: Jar) {
	group = 'build'
	description = 'Assembles a fat-jar executable jar'
	
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes 'Main-Class': "${mainClassName}"
	}
	
	archiveBaseName = "${rootProject.name}"
	from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}