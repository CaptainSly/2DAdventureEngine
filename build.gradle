import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'application'
}

sourceCompatibility = 1.15

group 'captainsly'
version '0.1.0'
mainClassName = 'captainsly.Main'

ext {
	lwjglVersion = "3.3.1"
	imguiVersion = "1.86.4"
	jomlVersion = "1.10.4"
	
	reload4jVersion = "1.2.19"
	slf4jVersion = "1.7.36"
	
	gsonVersion = "2.9.0"
	
	jRubyVersion = "9.3.3.0"
}

switch (OperatingSystem.current()) {
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
		break
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		
		break
}

repositories {
    mavenCentral()
}

dependencies {
	
	/* Logging - SLF4J & Reload4J */
	implementation "org.slf4j:slf4j-api:${slf4jVersion}"
	implementation "ch.qos.reload4j:reload4j:${reload4jVersion}"
	implementation "org.slf4j:slf4j-reload4j:${slf4jVersion}"

	/* Dear ImGui */
    implementation "io.github.spair:imgui-java-binding:$imguiVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"
    
    runtimeOnly "io.github.spair:imgui-java-$lwjglNatives:$imguiVersion"

	/* GSON */
	implementation "com.google.code.gson:gson:$gsonVersion"

	/* jRuby */
	implementation "org.jruby:jruby:$jRubyVersion"

	/* LWJGL */
	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-assimp"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-nanovg"
	implementation "org.lwjgl:lwjgl-nuklear"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-zstd"
	implementation "org.lwjgl:lwjgl-par"
	implementation "org.lwjgl:lwjgl-stb"
	runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-zstd::$lwjglNatives"
	implementation "org.joml:joml:${jomlVersion}"
}

jar {
    manifest {
        attributes (
            'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
            'Main-Class': 'captainsly.Main'
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task fatJar(type: Jar) {
	group 'build'
	description 'Creates a fat jar with all of the dependencies and natives included'
	
	manifest.from jar.manifest
	classifier = 'all'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	} {
		exclude "META-INF/*.SF"
		exclude "META-INF/*.DSA"
		exclude "META-INF/*.RSA"
	}
	with jar
}